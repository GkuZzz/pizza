{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://pizza/./lib/elements.js","webpack://pizza/./myJs.js","webpack://pizza/./lib/helpers.js","webpack://pizza/./lib/card.js","webpack://pizza/./lib/form.js"],"sourcesContent":["export const list = document.querySelector(\".list\");\nexport const addPizzaForm = document.querySelector(\".add-pizza-form\");\nexport const buttonCheck = document.querySelector(\".check-all-pizzas\");\nexport const formsList = document.querySelector(\".forms-list\");","import { list, addPizzaForm, buttonCheck, formsList } from \"./lib/elements.js\";\n\nimport {\n  checkButtons,\n  edit,\n  markAsSelected,\n  remove,\n  createPizza,\n} from \"./lib/helpers.js\";\n\nimport formHTML from \"./lib/form.js\";\nimport cardHTML from \"./lib/card.js\";\n\nlet items = [];\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const newItems = createPizza(items, e.currentTarget);\n  items = newItems;\n\n  e.currentTarget.reset();\n  list.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n}\n\nconst displayItems = () => {\n  list.innerHTML = cardHTML(items);\n};\n\nfunction displayFormItems() {\n  formsList.innerHTML = formHTML(items);\n}\n\nfunction saveToLocalStorage() {\n  localStorage.setItem(\"items\", JSON.stringify(items));\n}\n\nfunction getFromLocalStorage() {\n  const localStorageItems = JSON.parse(localStorage.getItem(\"items\"));\n\n  if (localStorageItems && localStorageItems.length) {\n    items.push(...localStorageItems);\n    list.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n  }\n}\n\naddPizzaForm.addEventListener(\"submit\", handleSubmit);\nlist.addEventListener(\"itemsUpdated\", displayItems);\nlist.addEventListener(\"itemsUpdated\", displayFormItems);\nlist.addEventListener(\"itemsUpdated\", saveToLocalStorage);\n// Делегирование событий. Слушаем событие на родительском UL\n// Делегируем событие элементу button\nlist.addEventListener(\"click\", function (e) {\n  const id = parseInt(e.target.value);\n\n  if (e.target.matches(\"button\")) {\n    const newItems = remove(id, items);\n    items = newItems;\n    list.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n  }\n  if (e.target.matches('input[type=\"checkbox\"]')) {\n    const newItems = markAsSelected(id, items);\n    items = newItems;\n    list.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n  }\n});\n\nformsList.addEventListener(\"submit\", function (e) {\n  e.preventDefault();\n\n  const itemsUpdated = edit(e.target, items);\n  items = itemsUpdated;\n  list.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n});\n\ngetFromLocalStorage();\n\nbuttonCheck.addEventListener(\"click\", function () {\n  const newItems = checkButtons(items);\n  items = newItems;\n\n  list.dispatchEvent(new CustomEvent(\"itemsUpdated\"));\n});\n","export function createPizza(items, currentTarget) {\n    const title = currentTarget.title.value;\n    const price = currentTarget.price.value;\n    const image = currentTarget.image.value;\n    const description = currentTarget.description.value;\n  \n    if (!title || !price || !image || !description) {\n      return;\n    }\n  \n    const item = {\n      title,\n      price,\n      image,\n      description,\n      selected: false,\n      id: Date.now(),\n    };\n  \n    return [...items, item]\n}\n\n\nexport function remove (id, items){\n    return items.filter((res) => res.id !== id);\n}\n\nexport function markAsSelected(id, items) {\n    const item = items.find(res => res.id === id)\n    const curIndex = items.findIndex(res => res.id === id)\n\n    const itemUpdated = {\n        ...item,\n        selected: !item.selected\n    }\n\n    return [\n        ...items.slice(0, curIndex),\n        itemUpdated,\n        ...items.slice(curIndex + 1)\n    ]\n}\n\nexport function edit(eTarget, items) {\n    const id = parseInt(eTarget.id)\n    const title = eTarget.title.value;\n    const price = eTarget.price.value;\n    const image = eTarget.image.value;\n    const description = eTarget.description.value;\n\n    if (!title || !price || !image || !description) return;\n    \n\n    // Нужно найти нужную пиццу по id\n    const itemOriginal = items.find(res => res.id === id);\n    const curIndex = items.findIndex(res => res.id === id);\n\n    const itemUpdated = {\n        ...itemOriginal,\n        title,\n        price,\n        image,\n        description\n    }\n\n    return [\n        ...items.slice(0, curIndex),\n        itemUpdated,\n        ...items.slice(curIndex + 1)\n    ]\n}\n\n\nexport function checkButtons(items) {\n    let checkedPizza = 0;\n    let itemsChecked = [];\n\n  items.forEach((pizza) => {\n    if (pizza.selected === true) {\n      checkedPizza += 1;\n    }\n  });\n\n  if (checkedPizza === items.length) {\n    itemsChecked = items.map((pizza) => {\n      return {\n        ...pizza,\n        selected: false,\n      };\n    });\n  } else {\n    itemsChecked = items.map((pizza) => {\n      return {\n        ...pizza,\n        selected: true,\n      };\n    });\n  }\n\n  return itemsChecked\n}","function cardHTML(items) {\n    return items.map((item) => {\n      return `\n                <li class=\"pizza-item\">\n                    <button value=\"${item.id}\"class=\"delete\">&times;</button>\n                    <div class=\"pizza-item-image\">\n                        <img src=\"${item.image}\" alt=\"${item.title}\">\n                    </div>\n                    <div class=\"pizza-items-details\">\n                        <div class=\"pizza-items-details-top\">\n                            <div class=\"itemHeader\">\n                                <input \n                                    value=\"${item.id}\" \n                                    type=\"checkbox\"\n                                    ${item.selected === true ? 'checked' : ''}>\n                                <span class =\"itemName\">${item.title}</span>\n                            </div>\n                            <span class=\"itemPrice\">${item.price}</span>\n                        </div>\n                        <span class=\"pizza-items-details-bottom\">${item.description}</span>\n                    </div>\n                </li>\n            `;\n    })\n    .join(\"\");\n}\n\nexport default cardHTML","function formHTML(items){\n    return items.map(item => {\n        return (\n            `<form class=\"edit-pizza-form\" autocomplete=\"off\" id=\"${item.id}\">\n                <input type=\"text\" name=\"title\" value=\"${item.title}\" placeholder=\"title\"> \n                <input type=\"text\" name=\"price\" value=\"${item.price}\" placeholder=\"price\"> \n                <input type=\"text\" name=\"image\" value=\"${item.image}\" placeholder=\"image\"> \n                <input type=\"text\" name=\"description\" value=\"${item.description}\" placeholder=\"description\"> \n                <button type=\"submit\"> + Редактировать </button> \n            </form>\n            `\n        )\n    }).join(\"\");\n}\n\nexport default formHTML"],"names":["list","document","querySelector","addPizzaForm","buttonCheck","formsList","_items","localStorageItems","items","addEventListener","e","preventDefault","newItems","currentTarget","title","value","price","image","description","item","selected","id","Date","now","concat","_toConsumableArray","createPizza","reset","dispatchEvent","CustomEvent","innerHTML","map","join","cardHTML","formHTML","localStorage","setItem","JSON","stringify","parseInt","target","matches","filter","res","remove","find","curIndex","findIndex","itemUpdated","_objectSpread","slice","markAsSelected","itemsUpdated","eTarget","itemOriginal","edit","parse","getItem","length","push","apply","checkedPizza","forEach","pizza","checkButtons"],"sourceRoot":""}